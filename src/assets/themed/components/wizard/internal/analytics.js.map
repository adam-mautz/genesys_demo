{"version":3,"file":"analytics.js","sourceRoot":"lib/default/","sources":["wizard/internal/analytics.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from '../../internal/environment';\nimport { Metrics } from '@cloudscape-design/component-toolkit/internal';\nimport { WizardProps } from '../interfaces';\n\nconst metrics = new Metrics(PACKAGE_SOURCE, PACKAGE_VERSION);\n\nconst prefix = 'csa_wizard';\n\nconst createEventType = (eventType: string) => `${prefix}_${eventType}`;\nconst createEventContext = (stepIndex = 0) => `${prefix}_step${stepIndex + 1}`;\nconst createEventDetail = (stepIndex = 0) => `step${stepIndex + 1}`;\n\n// A custom time cache is used to not clear the timer between navigation attempts\n// This allows us the ability to track time to attempt each step as well as the time to complete\n// each step\nlet timeCache: Record<string, number>;\nlet currentStepIndex: number;\nlet success: boolean;\n\nconst timeStart = (key = 'current') => {\n  timeCache[key] = Date.now();\n};\n\nconst timeEnd = (key = 'current', clear = false) => {\n  const start = timeCache[key];\n  // No start time is available when starting the first step\n  if (!start) {\n    return undefined;\n  }\n\n  if (clear) {\n    delete timeCache[key];\n  }\n\n  return (Date.now() - start) / 1000; // Convert to seconds\n};\n\nexport const trackStartWizard = () => {\n  timeCache = {};\n  currentStepIndex = 0;\n  success = false;\n\n  timeStart(prefix);\n};\n\nexport const trackEndWizard = (funnelId: string | undefined) => {\n  // End the timer of the wizard\n  const time = timeEnd(prefix, true);\n\n  const eventContext = createEventContext(currentStepIndex);\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventDetail: `${success}`,\n    eventType: createEventType('end'),\n    ...(time !== undefined && { eventValue: time.toString() }),\n    ...(funnelId && { funnel: funnelId }),\n  });\n};\n\nexport const trackStartStep = (stepIndex: number, funnelId?: string) => {\n  currentStepIndex = stepIndex;\n  const eventContext = createEventContext(stepIndex);\n\n  // End the timer of the previous step\n  const time = timeEnd();\n\n  // Start a new timer of the current step\n  timeStart();\n\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventDetail: createEventDetail(stepIndex),\n    eventType: createEventType('step'),\n    ...(funnelId && { funnel: funnelId }),\n    ...(time !== undefined && { eventValue: time.toString() }),\n  });\n};\n\nexport const trackNavigate = (\n  activeStepIndex: number,\n  requestedStepIndex: number,\n  reason: WizardProps.NavigationReason,\n  funnelId?: string\n) => {\n  const eventContext = createEventContext(activeStepIndex);\n  const time = timeEnd();\n\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventDetail: createEventDetail(requestedStepIndex),\n    eventType: createEventType('navigate'),\n    eventValue: { reason, ...(time !== undefined && { time }) },\n    ...(funnelId && { funnel: funnelId }),\n  });\n};\n\nexport const trackSubmit = (stepIndex: number, funnelId?: string) => {\n  success = true;\n  const time = timeEnd(prefix);\n  const eventContext = createEventContext(stepIndex);\n\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventDetail: createEventDetail(stepIndex),\n    eventType: createEventType('submit'),\n    ...(time !== undefined && { eventValue: time.toString() }),\n    ...(funnelId && { funnel: funnelId }),\n  });\n};\n\nexport const trackCancel = (stepIndex: number, funnelId?: string) => {\n  success = false;\n  const time = timeEnd(prefix);\n  const eventContext = createEventContext(stepIndex);\n\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventDetail: createEventDetail(stepIndex),\n    eventType: createEventType('cancel'),\n    ...(time !== undefined && { eventValue: time.toString() }),\n    ...(funnelId && { funnel: funnelId }),\n  });\n};\n"]}