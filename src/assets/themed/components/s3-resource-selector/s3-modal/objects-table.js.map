{"version":3,"file":"objects-table.js","sourceRoot":"lib/default/","sources":["s3-resource-selector/s3-modal/objects-table.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\n\ninterface ObjectsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Object> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchObjects'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: S3ResourceSelectorProps.Object) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function ObjectsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: ObjectsTableProps) {\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Object>\n      // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n      key={pathSegments.join('/')}\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Key\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18nStrings),\n        header: i18nStrings?.selectionObjects,\n        filteringAriaLabel: i18nStrings?.labelFiltering(i18nStrings?.selectionObjects),\n        filteringPlaceholder: i18nStrings?.selectionObjectsSearchPlaceholder,\n        loadingText: i18nStrings?.selectionObjectsLoading,\n        emptyText: i18nStrings?.selectionObjectsNoItems,\n        selectionLabels: i18nStrings?.labelsObjectsSelection,\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'objects'))}\n      columnDefinitions={[\n        {\n          id: 'Key',\n          header: i18nStrings?.columnObjectKey,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectKey),\n          sortingField: 'Key',\n          cell: item => {\n            const isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n            return (\n              <>\n                <InternalIcon name={item.IsFolder ? 'folder' : 'file'} />{' '}\n                {isClickable ? (\n                  <InternalLink onFollow={() => item.Key && onDrilldown(item)} variant=\"link\">\n                    {item.Key}\n                  </InternalLink>\n                ) : (\n                  item.Key\n                )}\n              </>\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18nStrings?.columnObjectLastModified,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectLastModified),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18nStrings?.columnObjectSize,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectSize),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.Key ?? '')}\n    />\n  );\n}\n"]}